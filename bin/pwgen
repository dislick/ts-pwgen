#!/usr/bin/env node

var PasswordGenerator = require('../lib/dest/password_generator.js').PasswordGenerator;
var argv = require('yargs')
  .usage('Usage: $0 [--length 10] [--parts 3] [--delimiter "-"] [--count 3] [-aAns]')
  .describe('p', 'Define how many parts there should be')
  .describe('l', 'Define the length of a part')
  .describe('d', 'Define the delimiter to use if there are multiple parts')
  .describe('c', 'Define how many passwords to generate')
  .describe('a', 'Use lowercase letters')
  .describe('A', 'Use uppercase letters')
  .describe('n', 'Use numbers')
  .describe('s', 'Use special characters')
  .describe('x', 'Use latin1 characters')
  .describe('v', 'Verbose output, see how long it would take a supercomputer to crack your generated password(s)')
  .describe('k', 'Do not copy the password to the clipboard')
  .describe('version', 'Display current version')
  .help('h')
  .boolean('a')
  .boolean('A')
  .boolean('n')
  .boolean('s')
  .boolean('x')
  .boolean('v').default('v', false)
  .boolean('k').default('k', false)
  .boolean('version')
  .default('c', 1)
  .alias('h', 'help')
  .alias('p', 'parts')
  .alias('l', 'length')
  .alias('d', 'delimiter')
  .alias('a', 'ascii')
  .alias('A', 'ASCII')
  .alias('n', 'numbers')
  .alias('s', 'special')
  .alias('x', 'latin1')
  .alias('c', 'count')
  .alias('v', 'verbose')
  .argv;

if (argv.version) {
  console.log(`ts-pwgen version 1.1.6`);
  process.exit(0);
}

var pwgen = new PasswordGenerator();

if (argv.parts) {
  pwgen.options.parts.amount = argv.p || argv.parts;
}

if (argv.length) {
  pwgen.options.parts.length = argv.l || argv.length;
}

if (argv.delimiter) {
  pwgen.options.parts.delimiter = argv.d || argv.delimiter;
}

pwgen.options.lowercaseLetters = argv.ascii;
pwgen.options.uppercaseLetters = argv.ASCII;
pwgen.options.numbers = argv.numbers;
pwgen.options.specialCharacters = argv.special;
pwgen.options.latin1Characters = argv.latin1;

if (!argv.ascii && !argv.ASCII && !argv.numbers && !argv.special && !argv.latin1) {
  pwgen.options.lowercaseLetters = true;
  pwgen.options.uppercaseLetters = true;  
  pwgen.options.numbers = true;
  pwgen.options.specialCharacters = true;
  pwgen.options.latin1Characters = false;
}

pwgen.interactive(argv.count, argv.verbose, argv.k);
